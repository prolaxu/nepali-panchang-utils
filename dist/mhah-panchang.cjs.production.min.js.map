{"version":3,"file":"mhah-panchang.cjs.production.min.js","sources":["../src/mhahInterfaces.ts","../src/mhahMoonOutragConst.ts","../src/mhahPanchangImpl.ts","../src/mhahCalculateFunc.ts","../src/mhahConstant.ts","../src/mhahSunMoonTimer.ts","../src/mhahCalendar.ts","../src/mhahPanchang.ts"],"sourcesContent":["export class corr {\n  mlcor: number;\n  mscor: number;\n  fcor: number;\n  dcor: number;\n  lcor: number;\n  constructor(\n    mlcor: number,\n    mscor: number,\n    fcor: number,\n    dcor: number,\n    lcor: number\n  ) {\n    this.mlcor = mlcor;\n    this.mscor = mscor;\n    this.fcor = fcor;\n    this.dcor = dcor;\n    this.lcor = lcor;\n  }\n}\n\nexport class corr2 {\n  l: number;\n  ml: number;\n  ms: number;\n  f: number;\n  d: number;\n  constructor(l: number, ml: number, ms: number, f: number, d: number) {\n    this.l = l;\n    this.ml = ml;\n    this.ms = ms;\n    this.f = f;\n    this.d = d;\n  }\n}\n","import { corr, corr2 } from './mhahInterfaces';\n\nexport class MhahMoonOutragConst {\n  //---------------------------------------------------------------------------\n  // Data on the Moon outrage in length.\n  //---------------------------------------------------------------------------\n\n  corrMoon = [\n    new corr(0, 0, 0, 4, 13.902),\n    new corr(0, 0, 0, 2, 2369.912),\n    new corr(1, 0, 0, 4, 1.979),\n    new corr(1, 0, 0, 2, 191.953),\n    new corr(1, 0, 0, 0, 22639.5),\n    new corr(1, 0, 0, -2, -4586.465),\n    new corr(1, 0, 0, -4, -38.428),\n    new corr(1, 0, 0, -6, -0.393),\n    new corr(0, 1, 0, 4, -0.289),\n    new corr(0, 1, 0, 2, -24.42),\n    new corr(0, 1, 0, 0, -668.146),\n    new corr(0, 1, 0, -2, -165.145),\n    new corr(0, 1, 0, -4, -1.877),\n    new corr(0, 0, 0, 3, 0.403),\n    new corr(0, 0, 0, 1, -125.154),\n    new corr(2, 0, 0, 4, 0.213),\n    new corr(2, 0, 0, 2, 14.387),\n    new corr(2, 0, 0, 0, 769.016),\n    new corr(2, 0, 0, -2, -211.656),\n    new corr(2, 0, 0, -4, -30.773),\n    new corr(2, 0, 0, -6, -0.57),\n    new corr(1, 1, 0, 2, -2.921),\n    new corr(1, 1, 0, 0, -109.673),\n    new corr(1, 1, 0, -2, -205.962),\n    new corr(1, 1, 0, -4, -4.391),\n    new corr(1, -1, 0, 4, 0.283),\n    new corr(1, -1, 0, 2, 14.577),\n    new corr(1, -1, 0, 0, 147.687),\n    new corr(1, -1, 0, -2, 28.475),\n    new corr(1, -1, 0, -4, 0.636),\n    new corr(0, 2, 0, 2, -0.189),\n    new corr(0, 2, 0, 0, -7.486),\n    new corr(0, 2, 0, -2, -8.096),\n    new corr(0, 0, 2, 2, -5.741),\n    new corr(0, 0, 2, 0, -411.608),\n    new corr(0, 0, 2, -2, -55.173),\n    new corr(0, 0, 2, -4, 0.025),\n    new corr(1, 0, 0, 1, -8.466),\n    new corr(1, 0, 0, -1, 18.609),\n    new corr(1, 0, 0, -3, 3.215),\n    new corr(0, 1, 0, 1, 18.023),\n    new corr(0, 1, 0, -1, 0.56),\n    new corr(3, 0, 0, 2, 1.06),\n    new corr(3, 0, 0, 0, 36.124),\n    new corr(3, 0, 0, -2, -13.193),\n    new corr(3, 0, 0, -4, -1.187),\n    new corr(3, 0, 0, -6, -0.293),\n    new corr(2, 1, 0, 2, -0.29),\n    new corr(2, 1, 0, 0, -7.649),\n    new corr(2, 1, 0, -2, -8.627),\n    new corr(2, 1, 0, -4, -2.74),\n    new corr(2, -1, 0, 2, 1.181),\n    new corr(2, -1, 0, 0, 9.703),\n    new corr(2, -1, 0, -2, -2.494),\n    new corr(2, -1, 0, -4, 0.36),\n    new corr(1, 2, 0, 0, -1.167),\n    new corr(1, 2, 0, -2, -7.412),\n    new corr(1, 2, 0, -4, -0.311),\n    new corr(1, -2, 0, 2, 0.757),\n    new corr(1, -2, 0, 0, 2.58),\n    new corr(1, -2, 0, -2, 2.533),\n    new corr(0, 3, 0, -2, -0.344),\n    new corr(1, 0, 2, 2, -0.992),\n    new corr(1, 0, 2, 0, -45.099),\n    new corr(1, 0, 2, -2, -0.179),\n    new corr(1, 0, -2, 2, -6.382),\n    new corr(1, 0, -2, 0, 39.528),\n    new corr(1, 0, -2, -2, 9.366),\n    new corr(0, 1, 2, 0, 0.415),\n    new corr(0, 1, 2, -2, -2.152),\n    new corr(0, 1, -2, 2, -1.44),\n    new corr(0, 1, -2, -2, 0.384),\n    new corr(2, 0, 0, 1, -0.586),\n    new corr(2, 0, 0, -1, 1.75),\n    new corr(2, 0, 0, -3, 1.225),\n    new corr(1, 1, 0, 1, 1.267),\n    new corr(1, -1, 0, -1, -1.089),\n    new corr(0, 0, 2, -1, 0.584),\n    new corr(4, 0, 0, 0, 1.938),\n    new corr(4, 0, 0, -2, -0.952),\n    new corr(3, 1, 0, 0, -0.551),\n    new corr(3, 1, 0, -2, -0.482),\n    new corr(3, -1, 0, 0, 0.681),\n    new corr(2, 0, 2, 0, -3.996),\n    new corr(2, 0, 2, -2, 0.557),\n    new corr(2, 0, -2, 2, -0.459),\n    new corr(2, 0, -2, 0, -1.298),\n    new corr(2, 0, -2, -2, 0.538),\n    new corr(1, 1, -2, -2, 0.426),\n    new corr(1, -1, 2, 0, -0.304),\n    new corr(1, -1, -2, 2, -0.372),\n    new corr(0, 0, 4, 0, 0.418),\n    new corr(2, -1, 0, -1, -0.352),\n  ];\n\n  // l, ml, ms, f, d\n  //corrMoon2 = new Array(); // additional\n\n  corrMoon2 = [\n    new corr2(0.127, 0, 0, 0, 6),\n    new corr2(-0.151, 0, 2, 0, -4),\n    new corr2(-0.085, 0, 0, 2, 4),\n    new corr2(0.15, 0, 1, 0, 3),\n    new corr2(-0.091, 2, 1, 0, -6),\n    new corr2(-0.103, 0, 3, 0, 0),\n    new corr2(-0.301, 1, 0, 2, -4),\n    new corr2(0.202, 1, 0, -2, -4),\n    new corr2(0.137, 1, 1, 0, -1),\n    new corr2(0.233, 1, 1, 0, -3),\n    new corr2(-0.122, 1, -1, 0, 1),\n    new corr2(-0.276, 1, -1, 0, -3),\n    new corr2(0.255, 0, 0, 2, 1),\n    new corr2(0.254, 0, 0, 2, -3),\n    new corr2(-0.1, 3, 1, 0, -4),\n    new corr2(-0.183, 3, -1, 0, -2),\n    new corr2(-0.297, 2, 2, 0, -2),\n    new corr2(-0.161, 2, 2, 0, -4),\n    new corr2(0.197, 2, -2, 0, 0),\n    new corr2(0.254, 2, -2, 0, -2),\n    new corr2(-0.25, 1, 3, 0, -2),\n    new corr2(-0.123, 2, 0, 2, 2),\n    new corr2(0.173, 2, 0, -2, -4),\n    new corr2(0.263, 1, 1, 2, 0),\n    new corr2(0.13, 3, 0, 0, -1),\n    new corr2(0.113, 5, 0, 0, 0),\n    new corr2(0.092, 3, 0, 2, -2),\n  ];\n}\n","import { MhahMoonOutragConst } from './mhahMoonOutragConst';\nimport { MhahConstant } from './mhahConstant';\n\nexport class MhahPanchangImpl {\n  kyear!: number;\n  kmon!: number;\n  kday!: number;\n  private mhahMoonOutragConst: MhahMoonOutragConst = new MhahMoonOutragConst();\n  constructor(private mhahConstant: MhahConstant) {}\n  d2r = Math.PI / 180;\n  r2d = 180 / Math.PI;\n  range = [1, 31, 0, 0, -3000, 4000, 0, 23, 0, 59, -12, 12, 0, 59];\n  tipnaks = [\n    2,\n    5,\n    6,\n    0,\n    1,\n    4,\n    3,\n    2,\n    4,\n    5,\n    5,\n    0,\n    2,\n    1,\n    3,\n    6,\n    1,\n    4,\n    4,\n    5,\n    0,\n    3,\n    3,\n    3,\n    5,\n    0,\n    1,\n  ];\n  Lmoon!: number;\n  Lsun!: number;\n  skor!: number;\n  LmoonYoga!: number;\n  LsunYoga!: number;\n  dt!: number;\n  ayanamsa: number = 0;\n\n  daysInMonth(m: number, y: number) {\n    let g_days: number[] = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if ((y % 4 === 0 && y % 100 !== 0) || y % 400 === 0) g_days[1] = 29;\n    return g_days[m];\n  }\n\n  //-----------------------------------------------------------------------------------\n  // Calculating geotsent p avoid longitude Moon and angular sector p News.\n  // (2 sec accuracy. longitude)\n  //-----------------------------------------------------------------------------------\n  moon(jd: number) {\n    // days from 1900\n    let tdays = jd - 2415020;\n    let t = tdays / 36525;\n    let t2 = t * t;\n    let t3 = t * t * t;\n\n    // slope travels to the equator\n    //let ob = 23.452294 - 0.0130125 * t - 0.00000164 * t2 + 0.000000503 * t3;\n    // the average length moon\n    let l =\n      270.4337361 +\n      13.176396544528099 * tdays -\n      (5.86 * t2) / 3600 +\n      (0.0068 * t3) / 3600;\n    // the difference medium length Moon and the Sun (the averageElongation Moon):\n    let d =\n      350.7374861110581 +\n      445267.1142166667 * t -\n      t2 * 1.436111132303874e-3 +\n      0.0000018888889 * t3;\n    // Perigee moon\n    let pe =\n      334.329556 +\n      (14648522.52 * t) / 3600 -\n      (37.17 * t2) / 3600 -\n      (0.045 * t3) / 3600;\n    // the average anomoly sun\n    let ms =\n      358.4758333333334 +\n      35999.04974999958 * t -\n      t2 * 1.500000059604645e-4 -\n      t3 * 3.3333333623078e-6;\n    // The average anomoloy moon\n    //ml = 296.1046083333757 + 477198.8491083336*t + 0.0091916667090522*t2 + 0.0000143888893*t3;\n    let ml = this.fix360(l - pe);\n    // Rising length node orbit the moon:\n    let om =\n      259.183275 -\n      (6962911.23 * t) / 3600 +\n      (7.48 * t2) / 3600 +\n      (0.008 * t3) / 3600;\n    // the average length Moon, measured from the bottom up hub orbit:\n\n    let f = this.fix360(l - om);\n\n    // periodic revisions\n    let r2rad = 360.0 * this.d2r;\n    let tb = tdays * 1e-12; // *10^12\n    let t2c = tdays * tdays * 1e-16; // *10^16\n    let a1 = Math.sin(r2rad * (0.53733431 - 10104982 * tb + 191 * t2c));\n    let a2 = Math.sin(r2rad * (0.71995354 - 147094228 * tb + 43 * t2c));\n    let c2 = Math.cos(r2rad * (0.71995354 - 147094228 * tb + 43 * t2c));\n    let a3 = Math.sin(r2rad * (0.14222222 + 1536238 * tb));\n    let a4 = Math.sin(r2rad * (0.48398132 - 147269147 * tb + 43 * t2c));\n    let c4 = Math.cos(r2rad * (0.48398132 - 147269147 * tb + 43 * t2c));\n    let a5 = Math.sin(r2rad * (0.52453688 - 147162675 * tb + 43 * t2c));\n    let a6 = Math.sin(r2rad * (0.84536324 - 11459387 * tb));\n    let a7 = Math.sin(r2rad * (0.23363774 + 1232723 * tb + 191 * t2c));\n    let a8 = Math.sin(r2rad * (0.5875 + 9050118 * tb));\n    let a9 = Math.sin(r2rad * (0.61043085 - 67718733 * tb));\n\n    let dlm =\n      0.84 * a3 + 0.31 * a7 + 14.27 * a1 + 7.261 * a2 + 0.282 * a4 + 0.237 * a6;\n    let dpm = -2.1 * a3 - 2.076 * a2 - 0.84 * a4 - 0.593 * a6;\n    let dkm = 0.63 * a3 + 95.96 * a2 + 15.58 * a4 + 1.86 * a5;\n    let dls = -6.4 * a3 - 0.27 * a8 - 1.89 * a6 + 0.2 * a9;\n    let dgc = (-4.318 * c2 - 0.698 * c4) / 3600.0 / 360.0;\n    dgc = 1.000002708 + 139.978 * dgc;\n\n    ml = this.d2r * (ml + (dlm - dpm) / 3600.0); //Average anomoly moon\n    ms = this.d2r * (ms + dls / 3600.0); //Average anomoly sun\n    f = this.d2r * (f + (dlm - dkm) / 3600.0);\n    d = this.d2r * (d + (dlm - dls) / 3600.0); //avg elongation moon\n\n    let lk = 0;\n    let lk1 = 0;\n\n    let i1corr = 1.0 - 6.832e-8 * tdays;\n    let i2corr = dgc * dgc;\n\n    for (let i = 0; i < 93; i++) {\n      // outrage at length\n      let arg =\n        this.mhahMoonOutragConst.corrMoon[i].mlcor * ml +\n        this.mhahMoonOutragConst.corrMoon[i].mscor * ms +\n        this.mhahMoonOutragConst.corrMoon[i].fcor * f +\n        this.mhahMoonOutragConst.corrMoon[i].dcor * d;\n      let sinarg = Math.sin(arg);\n      if (this.mhahMoonOutragConst.corrMoon[i].mscor !== 0) {\n        sinarg *= i1corr;\n        if (\n          this.mhahMoonOutragConst.corrMoon[i].mscor === 2 ||\n          this.mhahMoonOutragConst.corrMoon[i].mscor === -2\n        )\n          sinarg *= i1corr;\n      }\n      if (this.mhahMoonOutragConst.corrMoon[i].fcor !== 0) sinarg *= i2corr;\n      lk += this.mhahMoonOutragConst.corrMoon[i].lcor * sinarg;\n    }\n    for (let i = 0; i < 27; i++) {\n      // outrage at length additional\n      let arg =\n        this.mhahMoonOutragConst.corrMoon2[i].ml * ml +\n        this.mhahMoonOutragConst.corrMoon2[i].ms * ms +\n        this.mhahMoonOutragConst.corrMoon2[i].f * f +\n        this.mhahMoonOutragConst.corrMoon2[i].d * d;\n      let sinarg = Math.sin(arg);\n      lk1 += this.mhahMoonOutragConst.corrMoon2[i].l * sinarg;\n    }\n\n    // resentments of the planets\n    let dlid = 0.822 * Math.sin(r2rad * (0.3248 - 0.0017125594 * tdays));\n    dlid += 0.307 * Math.sin(r2rad * (0.14905 - 0.0034251187 * tdays));\n    dlid += 0.348 * Math.sin(r2rad * (0.68266 - 0.0006873156 * tdays));\n    dlid += 0.662 * Math.sin(r2rad * (0.65162 + 0.0365724168 * tdays));\n    dlid += 0.643 * Math.sin(r2rad * (0.88098 - 0.0025069941 * tdays));\n    dlid += 1.137 * Math.sin(r2rad * (0.85823 + 0.036448727 * tdays));\n    dlid += 0.436 * Math.sin(r2rad * (0.71892 + 0.036217918 * tdays));\n    dlid += 0.327 * Math.sin(r2rad * (0.97639 + 0.000173491 * tdays));\n\n    l = l + this.nutation(jd) + (dlm + lk + lk1 + dlid) / 3600.0;\n    this.LmoonYoga = l;\n    //alert(\"Lmoon=\"+l);\n    l = this.fix360(l);\n\n    // angular velocity of the moon on ecliptic (deg/day):\n    let vl = 13.176397;\n    vl = vl + 1.434006 * Math.cos(ml);\n    vl = vl + 0.280135 * Math.cos(2 * d);\n    vl = vl + 0.251632 * Math.cos(2 * d - ml);\n    vl = vl + 0.09742 * Math.cos(2 * ml);\n    vl = vl - 0.052799 * Math.cos(2 * f);\n    vl = vl + 0.034848 * Math.cos(2 * d + ml);\n    vl = vl + 0.018732 * Math.cos(2 * d - ms);\n    vl = vl + 0.010316 * Math.cos(2 * d - ms - ml);\n    vl = vl + 0.008649 * Math.cos(ms - ml);\n    vl = vl - 0.008642 * Math.cos(2 * f + ml);\n    vl = vl - 0.007471 * Math.cos(ms + ml);\n    vl = vl - 0.007387 * Math.cos(d);\n    vl = vl + 0.006864 * Math.cos(3 * ml);\n    vl = vl + 0.00665 * Math.cos(4 * d - ml);\n    vl = vl + 0.003523 * Math.cos(2 * d + 2 * ml);\n    vl = vl + 0.003377 * Math.cos(4 * d - 2 * ml);\n    vl = vl + 0.003287 * Math.cos(4 * d);\n    vl = vl - 0.003193 * Math.cos(ms);\n    vl = vl - 0.003003 * Math.cos(2 * d + ms);\n    vl = vl + 0.002577 * Math.cos(ml - ms + 2 * d);\n    vl = vl - 0.002567 * Math.cos(2 * f - ml);\n    vl = vl - 0.001794 * Math.cos(2 * d - 2 * ml);\n    vl = vl - 0.001716 * Math.cos(ml - 2 * f - 2 * d);\n    vl = vl - 0.001698 * Math.cos(2 * d + ms - ml);\n    vl = vl - 0.001415 * Math.cos(2 * d + 2 * f);\n    vl = vl + 0.001183 * Math.cos(2 * ml - ms);\n    vl = vl + 0.00115 * Math.cos(d + ms);\n    vl = vl - 0.001035 * Math.cos(d + ml);\n    vl = vl - 0.001019 * Math.cos(2 * f + 2 * ml);\n    vl = vl - 0.001006 * Math.cos(ms + 2 * ml);\n\n    this.skor = vl;\n    //l += ay;\n    //if(l < 0.0)l += 360.0;\n    return l;\n  }\n\n  //----------------------------------------------------------------------\n  // Calculating geotsent p avoid longitude Sun.\n  // (the acuracy of 1 sec . longitude)\n  //----------------------------------------------------------------------\n  sun(jd: number) {\n    // days frm 1900:\n    let tdays = jd - 2415020;\n\n    let t = tdays / 36525;\n    let t2 = t * t;\n    let t3 = t * t * t;\n\n    // the avg len sun\n\n    let ls = 279.696678 + 0.9856473354 * tdays + (1.089 * t2) / 3600;\n    // perigee sun\n    let pes =\n      101.220833 +\n      (6189.03 * t) / 3600 +\n      (1.63 * t2) / 3600 +\n      (0.012 * t3) / 3600;\n    // avg anomoly sun\n\n    let ms = this.fix360(ls - pes + 180);\n    let g =\n      ms +\n      (0.266 * Math.sin((31.8 + 119.0 * t) * this.d2r) +\n        6.4 * Math.sin((231.19 + 20.2 * t) * this.d2r) +\n        (1.882 - 0.016 * t) * Math.sin((57.24 + 150.27 * t) * this.d2r)) /\n        3600.0;\n\n    // eccentricity orbit sun\n    let ex = 0.01675104 - 0.0000418 * t - 0.000000126 * t2;\n\n    // eccentric anomoloy calculation iterative method\n    let u = this.kepler(g, ex, 0.0000003);\n\n    // cal true anomaly sun\n    let truanom;\n    let b = Math.sqrt((1 + ex) / (1 - ex));\n    if (Math.abs(Math.PI - u) < 1.0e-10) truanom = u;\n    else truanom = 2.0 * Math.atan(b * Math.tan(u / 2));\n    truanom = this.fix360(truanom * this.r2d);\n\n    //corrections for cal of longitude and radius vector\n    let u1 = (153.23 + 22518.7541 * t) * this.d2r;\n    let u2 = (216.57 + 45037.5082 * t) * this.d2r;\n    let u3 = (312.69 + 32964.3577 * t) * this.d2r;\n    let u4 = (350.74 + 445267.1142 * t - 0.00144 * t2) * this.d2r;\n    let u6 = (353.4 + 65928.71550000001 * t) * this.d2r;\n    let u5 = (315.6 + 893.3 * t) * this.d2r;\n\n    let dl = 0.00134 * Math.cos(u1);\n    dl += 0.00154 * Math.cos(u2);\n    dl += 0.002 * Math.cos(u3);\n    dl += 0.00179 * Math.sin(u4);\n    dl += (0.202 * Math.sin(u5)) / 3600;\n\n    let dr = 0.00000543 * Math.sin(u1);\n    dr += 0.00001575 * Math.sin(u2);\n    dr += 0.00001627 * Math.sin(u3);\n    dr += 0.00003076 * Math.cos(u4);\n    dr += 9.26999999e-6 * Math.sin(u6);\n\n    // true len of sun (deg)\n    let il = ls + dl + truanom - ms;\n\n    // corrections to abberations links\n    let r1 =\n      (1.0000002 * (1 - ex * ex)) / (1 + ex * Math.cos(truanom * this.d2r));\n    let rs = r1 + dr; // radius vector\n    let ab = (20.496 * (1 - ex * ex)) / rs / 3600;\n    ls = il + this.nutation(jd) - ab; // app len sun\n    this.LsunYoga = ls;\n\n    ls = this.fix360(ls);\n\n    return ls;\n  }\n\n  //----------------------------------------------------------------------------\n  // cal start and end of tithi (len = 12)and karana (len = 6)\n  //----------------------------------------------------------------------------\n  tithi(jd: number, n1: number, tzone: number, len: number) {\n    var s_t: any = {};\n    var flag;\n    let jdt = jd;\n    let knv = Math.floor(((jd - 2415020) / 365.25) * 12.3685);\n\n    for (let itit = n1; itit < n1 + 2; ++itit) {\n      let aspect = len * itit; // sun n moon in the early tithi\n      flag = 0;\n      if (aspect === 0) {\n        jdt = this.novolun(jd, knv);\n        flag = 1;\n      }\n      if (aspect === 360) {\n        jdt = this.novolun(jd, knv + 1);\n        flag = 1;\n      }\n      while (flag < 1) {\n        let Lsun0 = this.sun(jdt);\n        let Lmoon0 = this.moon(jdt);\n        let a = this.fix360(Lsun0 + aspect); // pt should be where luna\n        let asp1 = a - Lmoon0; // assymptots of the moon to ur point\n        if (asp1 > 180) asp1 -= 360;\n        if (asp1 < -180) asp1 += 360;\n        flag = 1;\n\n        if (Math.abs(asp1) > 0.001) {\n          jdt += asp1 / (this.skor - 1);\n          flag = 0;\n        }\n      }\n      if (itit === n1) s_t.start = this.calData(jdt + (tzone - this.dt) / 24);\n      if (itit === n1 + 1) s_t.end = this.calData(jdt + (tzone - this.dt) / 24);\n    }\n    return s_t;\n  }\n\n  //----------------------------------------------------------------------------\n  // cal entry and exit moon in nakshatra\n  //----------------------------------------------------------------------------\n  nakshatra(jd: number, n_naksh: number, tzone: number) {\n    var s_t: any = {};\n    var flag;\n    let jdt = jd;\n\n    for (let inak = n_naksh; inak < n_naksh + 2; ++inak) {\n      let n1 = this.fix360((inak * 80) / 6); // co-ordinate start of nakshatra\n      flag = 0;\n      while (flag < 1) {\n        let Lmoon0 = this.fix360(this.moon(jdt) + this.ayanamsa);\n        let asp1 = n1 - Lmoon0; // distance frm moon before nakshatra(degree)\n        if (asp1 > 180) asp1 -= 360;\n        if (asp1 < -180) asp1 += 360;\n        flag = 1;\n        if (Math.abs(asp1) > 0.001) {\n          jdt += asp1 / this.skor;\n          flag = 0;\n        }\n      }\n      if (inak === n_naksh)\n        s_t.start = this.calData(jdt + (tzone - this.dt) / 24);\n      if (inak === n_naksh + 1)\n        s_t.end = this.calData(jdt + (tzone - this.dt) / 24);\n    }\n    return s_t;\n  }\n\n  //----------------------------------------------------------------------------\n  // cal begin and end of yoga\n  //----------------------------------------------------------------------------\n  yoga(jd: number, zyoga: number, tzone: number) {\n    var s_t: any = {};\n    var flag;\n    let jdt = jd;\n    let z = zyoga;\n    var nn_yoga = new Array(2);\n    nn_yoga[0] = (Math.floor((z * 6) / 80) * 80) / 6;\n    nn_yoga[1] = ((Math.floor((z * 6) / 80) + 1) * 80) / 6;\n    for (let iyog = 0; iyog < 2; ++iyog) {\n      flag = 0;\n      while (flag < 1) {\n        this.sun(jdt);\n        this.moon(jdt);\n        let dmoonYoga = this.LmoonYoga + this.ayanamsa - 491143.07698973856;\n        let dsunYoga = this.LsunYoga + this.ayanamsa - 36976.91240579201;\n        //alert(LmoonYoga+\"\\r\"+LsunYoga+\"\\r\"+ayanamsa);\n        z = dmoonYoga + dsunYoga;\n        let asp1 = nn_yoga[iyog] - z;\n        flag = 1;\n        if (Math.abs(asp1) > 0.001) {\n          jdt += asp1 / (this.skor + 1.0145616633);\n          flag = 0;\n        }\n        //if (Math.abs(asp1) > 0.001) {jdt += (asp1 / skor) + (58.13 * Math.sin(asp1*d2r)); flag = 0;}\n      }\n      if (iyog === 0) s_t.start = this.calData(jdt + (tzone - this.dt) / 24);\n      if (iyog === 1) s_t.end = this.calData(jdt + (tzone - this.dt) / 24);\n    }\n    return s_t;\n  }\n\n  //-----------------------------------------------------------------------------\n  //cal time in the near past novoluna (err less then 2 min)\n  //-----------------------------------------------------------------------------\n  novolun(jd: number, knv: number) {\n    let t = (jd - 2415020) / 36525;\n    let t2 = t * t;\n    let t3 = t * t * t;\n\n    let jdnv =\n      2415020.75933 + 29.53058868 * knv + 0.0001178 * t2 - 0.000000155 * t3;\n    jdnv +=\n      0.00033 * Math.sin((166.56 + 132.87 * t - 0.009173 * t2) * this.d2r);\n    let m = 359.2242 + 29.10535608 * knv - 0.0000333 * t2 - 0.00000347 * t3;\n    let ml = 306.0253 + 385.81691806 * knv + 0.0107306 * t2 + 0.00001236 * t3;\n    let f = 21.2964 + 390.67050646 * knv - 0.0016528 * t2 - 0.00000239 * t3;\n    m *= this.d2r;\n    ml *= this.d2r;\n    f *= this.d2r;\n\n    let djd = (0.1734 - 0.000393 * t) * Math.sin(m);\n    djd += 0.0021 * Math.sin(2 * m);\n    djd -= 0.4068 * Math.sin(ml);\n    djd += 0.0161 * Math.sin(2 * ml);\n    djd -= 0.0004 * Math.sin(3 * ml);\n    djd += 0.0104 * Math.sin(2 * f);\n    djd -= 0.0051 * Math.sin(m + ml);\n    djd -= 0.0074 * Math.sin(m - ml);\n    djd += 0.0004 * Math.sin(2 * f + m);\n    djd -= 0.0004 * Math.sin(2 * f - m);\n    djd -= 0.0006 * Math.sin(2 * f + ml);\n    djd += 0.001 * Math.sin(2 * f - ml);\n    djd += 0.0005 * Math.sin(m + 2 * ml);\n\n    jdnv += djd;\n    return jdnv;\n  }\n\n  //-----------------------------------------------------\n  // decision equation kepler (in rad)\n  //-----------------------------------------------------\n  kepler(m: number, ex: number, err: number) {\n    //val u0, delta;\n\n    m *= this.d2r;\n    let u0 = m;\n    err *= this.d2r;\n    let delta = 1;\n    while (Math.abs(delta) >= err) {\n      delta = (m + ex * Math.sin(u0) - u0) / (1 - ex * Math.cos(u0));\n      u0 += delta;\n    }\n    return u0;\n  }\n\n  //-----------------------------------------------------\n  // cal nutation in len\n  //-----------------------------------------------------\n  nutation(jd: number) {\n    let t = (jd - 2415020) / 36525;\n    let t2 = t * t;\n\n    // avg len sun\n    let ls = 279.6967 + 36000.7689 * t + 0.000303 * t2;\n    // avg len moon\n    let l = 270.4341639 + 481267.8831417 * t - 0.0011333333 * t2;\n    // avg anomaly sun\n    let ms =\n      358.4758333333334 + 35999.04974999958 * t - t2 * 1.500000059604645e-4;\n    // avg anomaly moon\n    let ml =\n      296.1046083333757 + 477198.8491083336 * t + 0.0091916667090522 * t2;\n    // the diff medium len of moon and sun (avg elongation moon)\n    let d =\n      350.7374861110581 + 445267.1142166667 * t - t2 * 1.436111132303874e-3;\n\n    let om = 259.1832750002543 - 1934.142008333206 * t + 0.0020777778 * t2;\n    ls *= this.d2r;\n    l *= this.d2r;\n    ms *= this.d2r;\n    ml *= this.d2r;\n    d *= this.d2r;\n    om *= this.d2r;\n    let d2 = d * d;\n    let l2 = l * l;\n    let ls2 = ls * ls;\n\n    let nut = (-17.2327 - 0.01737 * t) * Math.sin(om);\n    nut += 0.2088 * Math.sin(2.0 * om);\n    nut += 0.0675 * Math.sin(ml);\n    nut -= 0.0149 * Math.sin(ml - d2);\n    nut -= 0.0342 * Math.sin(l2 - om);\n    nut += 0.0114 * Math.sin(l2 - ml);\n    nut -= 0.2037 * Math.sin(l2);\n    nut -= 0.0261 * Math.sin(l2 + ml);\n    nut += 0.0124 * Math.sin(ls2 - om);\n    nut += 0.0214 * Math.sin(ls2 - ms);\n    nut -= 1.2729 * Math.sin(ls2);\n    nut -= 0.0497 * Math.sin(ls2 + ms);\n    nut += 0.1261 * Math.sin(ms);\n    nut = nut / 3600.0;\n\n    return nut;\n  }\n\n  //-----------------------------------------------------\n  // Calculation ayanamsa (degrees)\n  //-----------------------------------------------------\n  calcayan(jd: number) {\n    let t = (jd - 2415020) / 36525;\n    // avg node len moon\n    let om =\n      259.183275 -\n      1934.142008333206 * t +\n      0.0020777778 * t * t +\n      0.0000022222222 * t * t * t;\n    // avg len sun\n    let ls = 279.696678 + 36000.76892 * t + 0.0003025 * t * t;\n    let aya =\n      17.23 * Math.sin(this.d2r * om) +\n      1.27 * Math.sin(this.d2r * ls * 2) -\n      (5025.64 + 1.11 * t) * t;\n    aya = (aya - 80861.27) / 3600.0; // 84038.27 = Fagan-Bradley, 80861.27 = Lahiri\n\n    return aya;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // cal date by number of date mon and year\n  //------------------------------------------------------------------------------------------\n  mdy2julian(m: number, d: number, y: number) {\n    let im = 12 * (y + 4800) + m - 3;\n    let j = (2 * (im - Math.floor(im / 12) * 12) + 7 + 365 * im) / 12;\n    j = Math.floor(j) + d + Math.floor(im / 48) - 32083;\n    if (j > 2299171) j += Math.floor(im / 4800) - Math.floor(im / 1200) + 38;\n    j -= 0.5;\n\n    return j;\n  }\n\n  dTime(jd: number) {\n    var efdt = [\n      124,\n      85,\n      62,\n      48,\n      37,\n      26,\n      16,\n      10,\n      9,\n      10,\n      11,\n      11,\n      12,\n      13,\n      15,\n      16,\n      17,\n      17,\n      13.7,\n      12.5,\n      12,\n      7.5,\n      5.7,\n      7.1,\n      7.9,\n      1.6,\n      -5.4,\n      -5.9,\n      -2.7,\n      10.5,\n      21.2,\n      24,\n      24.3,\n      29.2,\n      33.2,\n      40.2,\n      50.5,\n      56.9,\n      65.7,\n      75.5,\n    ];\n    this.calData(jd);\n    let dgod = this.kyear + (this.kmon - 1) / 12 + (this.kday - 1) / 365.25;\n    let t = (jd - 2378497) / 36525; // IN centuries rejection of 1800 bc\n    //t = (jd - 2415020)/36525; // in cent rejection of 1900 bc\n    if (dgod >= 1620 && dgod < 2010) {\n      let i1 = Math.floor((dgod - 1620) / 10);\n      let di = dgod - (1620 + i1 * 10);\n      this.dt = efdt[i1] + ((efdt[i1 + 1] - efdt[i1]) * di) / 10;\n    } else {\n      if (dgod >= 2010) this.dt = 25.5 * t * t - 39;\n      //if (dgod >= 2010) dt = 29.949 * t * t - 56.796;\n      //if (dgod < 1620) dt = 5 + 24.349 + 72.3165 * t + 29.949 * t * t;\n      if (dgod >= 948 && dgod < 1620) this.dt = 25.5 * t * t;\n      if (dgod < 948) this.dt = 1361.7 + 320 * t + 44.3 * t * t;\n    }\n    this.dt /= 3600;\n    return this.dt;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // cal date on calendar date\n  //------------------------------------------------------------------------------------------\n  calData(jd: number) {\n    let z1 = jd + 0.5;\n    let z2 = Math.floor(z1);\n    let f = z1 - z2;\n\n    let a, alf;\n    if (z2 < 2299161) a = z2;\n    else {\n      alf = Math.floor((z2 - 1867216.25) / 36524.25);\n      a = z2 + 1 + alf - Math.floor(alf / 4);\n    }\n\n    let b = a + 1524;\n    let c = Math.floor((b - 122.1) / 365.25);\n    let d = Math.floor(365.25 * c);\n    let e = Math.floor((b - d) / 30.6001);\n\n    let days = b - d - Math.floor(30.6001 * e) + f;\n    this.kday = Math.floor(days);\n\n    if (e < 13.5) this.kmon = e - 1;\n    else this.kmon = e - 13;\n\n    if (this.kmon > 2.5) this.kyear = c - 4716;\n    if (this.kmon < 2.5) this.kyear = c - 4715;\n\n    let hh1 = (days - this.kday) * 24;\n    let khr = Math.floor(hh1);\n    let kmin = hh1 - khr;\n    let ksek = kmin * 60;\n    kmin = Math.floor(ksek);\n    ksek = Math.floor((ksek - kmin) * 60);\n    let s = new Date(this.kyear, this.kmon - 1, this.kday, khr, kmin, ksek, 0);\n\n    return s;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // transalation deg logitudinal in degrees,min and sec\n  //------------------------------------------------------------------------------------------\n  lon2dmsz(x: number) {\n    var d, m, s;\n    x = Math.abs(x);\n    d = Math.floor(x);\n    let ss0 = Math.round((x - d) * 3600);\n    m = Math.floor(ss0 / 60);\n    s = (ss0 % 60) % 60;\n    d %= 30;\n    let str = d + ' ' + m + \"'\" + s + '\" ';\n    return str;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // translation degrees in deg, min and sec\n  //------------------------------------------------------------------------------------------\n  lon2dms(x: number) {\n    var d, m, s;\n    x = Math.abs(x);\n    d = Math.floor(x);\n    let ss0 = Math.round((x - d) * 3600);\n    m = Math.floor(ss0 / 60);\n    s = (ss0 % 60) % 60;\n    let str = d + ' ' + m + \"'\" + s + '\"';\n\n    return str;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // fixing the angle within 360 degrees\n  //------------------------------------------------------------------------------------------\n  fix360(v: number) {\n    while (v < 0.0) v += 360.0;\n    while (v > 360.0) v -= 360.0;\n    return v;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // Day of the Week\n  //------------------------------------------------------------------------------------------\n  weekDay(jd: number) {\n    // Julian date for the begin of the day\n    let jd0 = Math.floor(jd) + 0.5;\n    if (jd < jd0) jd0 -= 1;\n\n    // day\n    let jdn = jd0 + 1.5;\n    let dn1 = Math.floor(jdn / 7) * 7;\n\n    let wday = Math.floor(jdn - dn1);\n\n    return wday;\n  }\n\n  lunarPhase(jd: number): number {\n    let Lmoon = this.moon(jd); // Logitudinal Moon\n    let Lsun = this.sun(jd); // Logitudinal Sun\n    return this.fix360(Lmoon - Lsun);\n  }\n}\n","import { MhahConstant } from './mhahConstant';\nimport { MhahPanchangImpl } from './mhahPanchangImpl';\n\nexport class MhahCalculateFunc {\n  calculate(d: Date, mhahConstant: MhahConstant) {\n    let mhahPanchangImpl = new MhahPanchangImpl(mhahConstant);\n    let Day: any = {} as {};\n    let Tithi: any = {} as {};\n    let Paksha: any = {} as {};\n    let Nakshatra: any = {} as {};\n    let Karna: any = {} as {};\n    let Yoga: any = {} as {};\n    let Ayanamsa: any = {} as {};\n    let Raasi: any = {} as {};\n    let Julian: any = {} as {};\n\n    var n_wday,\n      n_tithi = 1,\n      n_naksh = 1,\n      n_karana = 0,\n      n_yoga;\n    //var mhahPanchangImpl = new MhahPanchangImpl();\n\n    var day = d.getDate();\n    var mon = d.getMonth() + 1;\n    var year = d.getFullYear();\n    var hr = d.getHours();\n    hr += d.getMinutes() / 60;\n    var tzone = (d.getTimezoneOffset() / 60) * -1;\n\n    let inpmin: any = Math.floor(d.getMinutes());\n    if (inpmin < 10) inpmin = '0' + inpmin;\n\n    // Julian date in local p. LT:\n    let dayhr = day + hr / 24;\n    let jdlt = mhahPanchangImpl.mdy2julian(mon, dayhr, year);\n\n    // Day:\n    n_wday = mhahPanchangImpl.weekDay(jdlt);\n    Day.ino = n_wday;\n    Day.name = mhahConstant.Day.name[n_wday];\n    Day.name_en_UK = mhahConstant.Day.name_en_UK[n_wday];\n\n    // julian day at the begining of the day\n    let jd0 = mhahPanchangImpl.mdy2julian(mon, day, year);\n    let jdut = jd0 + (hr - tzone) / 24;\n    mhahPanchangImpl.dt = mhahPanchangImpl.dTime(jdut);\n    let jd = jdut + mhahPanchangImpl.dt / 24;\n\n    //ayyanamsa\n    mhahPanchangImpl.ayanamsa = mhahPanchangImpl.calcayan(jd);\n\n    // Logitudinal Moon\n    mhahPanchangImpl.Lmoon = mhahPanchangImpl.moon(jd);\n\n    // Logitudinal Sun\n    mhahPanchangImpl.Lsun = mhahPanchangImpl.sun(jd);\n\n    // yoga:\n    let zyoga = this.getZYoga(mhahPanchangImpl, mhahPanchangImpl.ayanamsa, jd);\n    n_yoga = this.getYoga(zyoga);\n    let s_yoga = mhahPanchangImpl.yoga(jd, zyoga, tzone);\n\n    // Nakstra\n    n_naksh = this.getNakshatra(\n      mhahPanchangImpl,\n      mhahPanchangImpl.Lmoon,\n      mhahPanchangImpl.ayanamsa\n    );\n    var s_naksh = mhahPanchangImpl.nakshatra(jd, n_naksh, tzone);\n\n    // tithi\n    n_tithi = this.getTithi(mhahPanchangImpl.Lmoon, mhahPanchangImpl.Lsun);\n    var s_tithi = mhahPanchangImpl.tithi(jd, n_tithi, tzone, 12);\n\n    // paksha\n    let n_paksha = this.getPaksha(n_tithi + 1);\n\n    // Karana\n    let KaranaArray = this.getKarana(\n      mhahPanchangImpl.Lmoon,\n      mhahPanchangImpl.Lsun\n    );\n    n_karana = KaranaArray[0];\n    let nk = KaranaArray[1];\n    let s_karana = mhahPanchangImpl.tithi(jd, nk, tzone, 6);\n\n    let z = this.getRaasi(\n      mhahPanchangImpl,\n      mhahPanchangImpl.Lmoon,\n      mhahPanchangImpl.ayanamsa\n    );\n\n    Ayanamsa.name = mhahPanchangImpl.lon2dms(mhahPanchangImpl.ayanamsa);\n    Raasi.name = mhahConstant.Raasi.name[z];\n    Raasi.ino = z;\n    Raasi.name_en_UK = mhahConstant.Raasi.name_en_UK[z];\n    Nakshatra.name = mhahConstant.Nakshatra.name[n_naksh];\n    Nakshatra.name_en_NP = mhahConstant.Nakshatra.name_en_NP[n_naksh];\n    Nakshatra.ino = n_naksh;\n    Nakshatra.start = s_naksh.start;\n    Nakshatra.end = s_naksh.end;\n    Karna.name = mhahConstant.Karna.name[n_karana];\n    Karna.name_en_NP = mhahConstant.Karna.name_en_NP[n_karana];\n    Karna.ino = n_karana;\n    Karna.start = s_karana.start;\n    Karna.end = s_karana.end;\n    Yoga.name = mhahConstant.Yoga.name[n_yoga];\n    Yoga.name_en_NP = mhahConstant.Yoga.name_en_NP[n_yoga];\n    Yoga.ino = n_yoga;\n    Yoga.start = s_yoga.start;\n    Yoga.end = s_yoga.end;\n    Tithi.name = mhahConstant.Tithi.name[n_tithi];\n    Tithi.name_en_NP = mhahConstant.Tithi.name_en_NP[n_tithi];\n    Tithi.ino = n_tithi;\n    Tithi.start = s_tithi.start;\n    Tithi.end = s_tithi.end;\n    Paksha.ino = n_paksha;\n    Paksha.name = mhahConstant.Paksha.name[n_paksha];\n    Paksha.name_en_NP = mhahConstant.Paksha.name_en_NP[n_paksha];\n    Paksha.name_en_UK = mhahConstant.Paksha.name_en_UK[n_paksha];\n\n    Julian.date = jd;\n    Julian.day = Math.floor(jd);\n\n    return {\n      Day,\n      Tithi,\n      Paksha,\n      Nakshatra,\n      Karna,\n      Yoga,\n      Ayanamsa,\n      Raasi,\n      Julian,\n    };\n  }\n\n  getTithi(Lmoon: number, Lsun: number) {\n    if (Lmoon < Lsun) Lmoon += 360;\n    return Math.floor((Lmoon - Lsun) / 12);\n  }\n\n  getNakshatra(\n    mhahPanchangImpl: MhahPanchangImpl,\n    Lmoon: number,\n    ayanamsa: number\n  ) {\n    let Lmoon0 = mhahPanchangImpl.fix360(Lmoon + ayanamsa);\n    return Math.floor((Lmoon0 * 6) / 80);\n  }\n\n  getZYoga(mhahPanchangImpl: MhahPanchangImpl, ayanamsa: number, jd: number) {\n    mhahPanchangImpl.moon(jd);\n    mhahPanchangImpl.sun(jd);\n    let dmoonYoga = mhahPanchangImpl.LmoonYoga + ayanamsa - 491143.07698973856;\n    let dsunYoga = mhahPanchangImpl.LsunYoga + ayanamsa - 36976.91240579201;\n\n    return dmoonYoga + dsunYoga;\n  }\n\n  getYoga(zyoga: number) {\n    let n_yoga = (zyoga * 6) / 80;\n    while (n_yoga < 0) n_yoga += 27;\n    while (n_yoga > 27) n_yoga -= 27;\n\n    return Math.floor(n_yoga);\n  }\n\n  getKarana(Lmoon0: number, Lsun0: number) {\n    let n_karana = 0,\n      nk = 0;\n    if (Lmoon0 < Lsun0) Lmoon0 += 360;\n    nk = Math.floor((Lmoon0 - Lsun0) / 6);\n    if (nk === 0) n_karana = 10;\n    if (nk >= 57) n_karana = nk - 50;\n    if (nk > 0 && nk < 57) n_karana = nk - 1 - Math.floor((nk - 1) / 7) * 7;\n    return [n_karana, nk];\n  }\n\n  getRaasi(\n    mhahPanchangImpl: MhahPanchangImpl,\n    Lmoon: number,\n    ayanamsa: number\n  ) {\n    return Math.floor(Math.abs(mhahPanchangImpl.fix360(Lmoon + ayanamsa)) / 30);\n  }\n\n  getPaksha(n_tithi: number): number {\n    return n_tithi > 15 ? 1 : 0;\n  }\n}\n","export class MhahConstant {\n  Ritu = {\n    name: [ 'वसन्त', 'ग्रीष्म', 'वर्षा', 'शरद्', 'हेमन्त', 'शित्'],\n    name_en_UK: [\n      'Spring',\n      'Summer',\n      'Monsoon',\n      'Autumn',\n      'Pre-Winter',\n      'Winter',\n    ],\n  };\n  Masa = {\n    name:[ 'बैशाख', 'जेठ', 'असार', 'साउन', 'भदौ', 'असोज', 'कार्तिक', 'मंसिर', 'पुष', 'माघ', 'फाल्गुन', 'चैत'],\n    name_en_NP: [\n      'Baisakha',\n      'Jyestha',\n      'Asadha',\n      'Srabana',\n      'Bhadraba',\n      'Aswina',\n      'Karttika',\n      'Margasira',\n      'Pausa',\n      'Magha',\n      'Phalguna',\n      'Chaitra',\n    ],\n  };\n  Raasi: {\n    name: string[];\n    name_en_UK: string[];\n  } = {\n    name: [ 'मेष', 'वृष', 'मिथुन', 'कर्कट', 'सिंह', 'कन्या', 'तुला', 'वृश्चिक', 'धनु', 'मकर', 'कुम्भ', 'मीन'],\n    name_en_UK: [\n      'Aries',\n      'Taurus',\n      'Gemini',\n      'Cancer',\n      'Leo',\n      'Virgo',\n      'Libra',\n      'Scorpio',\n      'Sagittarius',\n      'Capricorn',\n      'Aquarius',\n      'Pisces',\n    ],\n  };\n  Day = {\n    name: [ 'आइतबार', 'सोमबार', 'मङ्गलबार', 'बुधबार', 'बिहिबार', 'शुक्रबार', 'शनिबार'],\n    name_en_UK: [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ],\n  };\n  Nakshatra = {\n    name: [\n      \"अश्विनी\",\n      \"भरणी\",\n      \"कृत्तिका\",\n      \"रोहिणी\",\n      \"मृगशीर्ष\",\n      \"आर्द्रा\",\n      \"पुनर्वसु\",\n      \"पुष्य\",\n      \"आश्लेषा\",\n      \"मघा\",\n      \"पूर्व फाल्गुनी\",\n      \"उत्तर फाल्गुनी\",\n      \"हस्त\",\n      \"चित्रा\",\n      \"स्वाति\",\n      \"विशाखा\",\n      \"अनुराधा\",\n      \"ज्येष्ठा\",\n      \"मूल\",\n      \"पूर्व आषाढ\",\n      \"उत्तर आषाढ\",\n      \"श्रवण\",\n      \"धनिष्ठा\",\n      \"शतभिषा\",\n      \"पूर्व भाद्रपदा\",\n      \"उत्तर भाद्रपदा\",\n      \"रेवती\"\n    ],\n\n    name_en_NP: [\n      'Ashwini',\n      'Dwija',\n      'Krittika',\n      'Rohini',\n      'Mrigashirsha',\n      'Ardra',\n      'Punarvasu',\n      'Pushya',\n      'Ashlesha',\n      'Magha',\n      'Purva Phalguni',\n      'Uttara Phalguni',\n      'Hasta',\n      'Chitra',\n      'Swati',\n      'Vishakha',\n      'Anuradha',\n      'Jyeshtha',\n      'Mula',\n      'Purva Ashadha',\n      'Uttara Ashadha',\n      'Sravana',\n      'Dhanishta',\n      'Shatabhisha',\n      'Purva Bhadrapada',\n      'Uttara Bhadrapada',\n      'Rebati',\n    ],\n  };\n  Paksha = {\n    name_en_NP: ['Shukla', 'Krishna'],\n    name_en_UK: ['Waxing Moon', 'Waning Moon'],\n    name: ['शुक्ल', 'कृष्ण'],\n  };\n\n  Tithi = {\n    name: [\n      \"प्रतिपदा\",\n      \"द्वितीया\",\n      \"तृतीया\",\n      \"चतुर्थी\",\n      \"पञ्चमी\",\n      \"षष्ठी\",\n      \"सप्तमी\",\n      \"अष्टमी\",\n      \"नवमी\",\n      \"दशमी\",\n      \"एकादशी\",\n      \"द्वादशी\",\n      \"त्रयोदशी\",\n      \"चतुर्दशी\",\n      \"पूर्णिमा\",\n      \"प्रतिपदा\",\n      \"द्वितीया\",\n      \"तृतीया\",\n      \"चतुर्थी\",\n      \"पञ्चमी\",\n      \"षष्ठी\",\n      \"सप्तमी\",\n      \"अष्टमी\",\n      \"नवमी\",\n      \"दशमी\",\n      \"एकादशी\",\n      \"द्वादशी\",\n      \"त्रयोदशी\",\n      \"चतुर्दशी\",\n      \"अमावास्या\"\n    ],\n    name_en_NP: [\n      'Padyami',\n      'Vidhiya',\n      'Thadiya',\n      'Chavithi',\n      'Panchami',\n      'Shasti',\n      'Sapthami',\n      'Ashtami',\n      'Navami',\n      'Dasami',\n      'Ekadasi',\n      'Dvadasi',\n      'Trayodasi',\n      'Chaturdasi',\n      'Punnami',\n      'Padyami',\n      'Vidhiya',\n      'Thadiya',\n      'Chaviti',\n      'Panchami',\n      'Shasti',\n      'Sapthami',\n      'Ashtami',\n      'Navami',\n      'Dasami',\n      'Ekadasi',\n      'Dvadasi',\n      'Trayodasi',\n      'Chaturdasi',\n      'Amavasya',\n    ],\n  };\n  Karna = {\n    name_en_NP: [\n      'Bawa',\n      'Balava',\n      'Kaulava',\n      'Taitula',\n      'Garaja',\n      'Vanija',\n      'Vishti',\n      'Sakuna',\n      'Chatushpada',\n      'Nagava',\n      'Kimstughana',\n    ],\n    name:[ 'बव', 'बालव', 'कौलव', 'तैतिल', 'गरज', 'वणिज', 'विष्टि', 'शकुनि', 'चतुष्पद', 'नाग', 'किंस्तुघ्न']\n  };\n  Yoga = {\n    name_en_NP: [\n      'Vishkambha',\n      'Prithi',\n      'Ayushman',\n      'Saubhagya',\n      'Sobhana',\n      'Atiganda',\n      'Sukarman',\n      'Dhrithi',\n      'Soola',\n      'Ganda',\n      'Vridhi',\n      'Dhruva',\n      'Vyaghata',\n      'Harshana',\n      'Vajra',\n      'Siddhi',\n      'Vyatipata',\n      'Variyan',\n      'Parigha',\n      'Siva',\n      'Siddha',\n      'Sadhya',\n      'Subha',\n      'Sukla',\n      'Bramha',\n      'Indra',\n      'Vaidhruthi',\n    ],\n    name: [ 'विष्कम्भ', 'पृथी', 'आयुष्मान', 'सौभाग्य', 'शोभन', 'अतिगण्ड', 'सुकर्मा', 'धृति', 'शूल', 'गण्ड', 'वृद्धि', 'ध्रुव', 'व्याघात', 'हर्षण', 'वज्र', 'असृक्', 'व्यतिपात', 'वरीयान', 'परिघ', 'शिव', 'सिद्ध', 'साध्ध', 'शुभ', 'शुक्ल', 'ब्रह्म', 'इन्द्र', 'वैधृति'],\n  };\n}\n","export class MhahSunMoonTimer {\n  rad = Math.PI / 180;\n\n  // sun times configuration (angle, morning name, evening name)\n\n  times = [\n    [-0.833, 'sunRise', 'sunSet'],\n    [-0.3, 'sunRiseEnd', 'sunSetStart'],\n    [-6, 'dawn', 'dusk'],\n    [-12, 'nauticalDawn', 'nauticalDusk'],\n    [-18, 'nightEnd', 'night'],\n  ];\n\n  sunTimer(date: Date, lat: number, lng: number, height?: number) {\n    let calS = this.calculatSunTimer(date, lat, lng, height);\n    let result: any = {\n      solarNoon: this.fromJulian(calS.Jnoon),\n      nadir: this.fromJulian(calS.Jnoon - 0.5),\n    };\n    let i, time, h0, Jset, Jrise;\n    for (i = 0; i < this.times.length; i += 1) {\n      time = this.times[i];\n      h0 = (time[0] + calS.dh) * this.rad;\n\n      Jset = this.getSetJ(\n        h0,\n        calS.lw,\n        calS.phi,\n        calS.dec,\n        calS.n,\n        calS.M,\n        calS.L\n      );\n      Jrise = calS.Jnoon - (Jset - calS.Jnoon);\n\n      result[time[1]] = this.fromJulian(Jrise);\n      result[time[2]] = this.fromJulian(Jset);\n    }\n    return result;\n  }\n\n  calculatSunTimer(date: Date, lat: number, lng: number, height?: number) {\n    height = height || 0;\n\n    let lw = this.rad * -lng,\n      phi = this.rad * lat,\n      dh = this.observerAngle(height),\n      d = this.toDays(date),\n      n = this.julianCycle(d, lw),\n      ds = this.approxTransit(0, lw, n),\n      M = this.solarMeanAnomaly(ds),\n      L = this.eclipticLongitude(M),\n      dec = this.declination(L, 0),\n      Jnoon = this.solarTransitJ(ds, M, L);\n\n    return { Jnoon, dh, lw, phi, dec, n, M, L };\n  }\n\n  getSunRiseJd(date: Date, lat: number, lng: number, height?: number) {\n    let calS = this.calculatSunTimer(date, lat, lng, height);\n    let time, h0, Jset, Jrise;\n    time = this.times[0];\n    h0 = (time[0] + calS.dh) * this.rad;\n    Jset = this.getSetJ(\n      h0,\n      calS.lw,\n      calS.phi,\n      calS.dec,\n      calS.n,\n      calS.M,\n      calS.L\n    );\n    Jrise = calS.Jnoon - (Jset - calS.Jnoon);\n    return Jrise;\n  }\n\n  dayMs = 1000 * 60 * 60 * 24;\n  J1970 = 2440588;\n  J2000 = 2451545;\n  J0 = 0.0009;\n  observerAngle(height) {\n    return (-2.076 * Math.sqrt(height)) / 60;\n  }\n  julianCycle(d, lw) {\n    return Math.round(d - this.J0 - lw / (2 * Math.PI));\n  }\n  toJulian(date) {\n    return date.valueOf() / this.dayMs - 0.5 + this.J1970;\n  }\n  fromJulian(j) {\n    return new Date((j + 0.5 - this.J1970) * this.dayMs);\n  }\n  toDays(date) {\n    return this.toJulian(date) - this.J2000;\n  }\n  approxTransit(Ht, lw, n) {\n    return this.J0 + (Ht + lw) / (2 * Math.PI) + n;\n  }\n  hourAngle(h, phi, d) {\n    return Math.acos(\n      (Math.sin(h) - Math.sin(phi) * Math.sin(d)) /\n        (Math.cos(phi) * Math.cos(d))\n    );\n  }\n  solarTransitJ(ds, M, L) {\n    return this.J2000 + ds + 0.0053 * Math.sin(M) - 0.0069 * Math.sin(2 * L);\n  }\n  solarMeanAnomaly(d) {\n    return this.rad * (357.5291 + 0.98560028 * d);\n  }\n  eclipticLongitude(M) {\n    var C =\n        this.rad *\n        (1.9148 * Math.sin(M) +\n          0.02 * Math.sin(2 * M) +\n          0.0003 * Math.sin(3 * M)), // equation of center\n      P = this.rad * 102.9372; // perihelion of the Earth\n    return M + C + P + Math.PI;\n  }\n  e = this.rad * 23.4397; // obliquity of the Earth\n  declination(l, b) {\n    return Math.asin(\n      Math.sin(b) * Math.cos(this.e) +\n        Math.cos(b) * Math.sin(this.e) * Math.sin(l)\n    );\n  }\n\n  getSetJ(h, lw, phi, dec, n, M, L) {\n    var w = this.hourAngle(h, phi, dec),\n      a = this.approxTransit(w, lw, n);\n    return this.solarTransitJ(a, M, L);\n  }\n}\n","import { MhahConstant } from './mhahConstant';\nimport { MhahPanchangImpl } from './mhahPanchangImpl';\nimport { MhahSunMoonTimer } from './mhahSunMoonTimer';\nimport { MhahCalculateFunc } from './mhahCalculateFunc';\nexport class MhahCalendar {\n  calendar(\n    mhahConstant: MhahConstant,\n    dt: Date,\n    lat: number,\n    lng: number,\n    height?: number\n  ) {\n    let Tithi: any = {} as {};\n    let Nakshatra: any = {} as {};\n    let Yoga: any = {} as {};\n    let Karna: any = {} as {};\n    let Masa: any = {} as {};\n    let MoonMasa: any = {} as {};\n    let Raasi: any = {} as {};\n    let Ritu: any = {} as {};\n    let Paksha: any = {} as {};\n    let mhahPanchangImpl = new MhahPanchangImpl(mhahConstant);\n    let mhahCalculateFunc = new MhahCalculateFunc();\n    let mhahSunMoonTimer = new MhahSunMoonTimer();\n    let sunRise = mhahSunMoonTimer.getSunRiseJd(dt, lat, lng, height);\n    let nn_tithi = this.getCalendarTithi(sunRise, mhahPanchangImpl);\n    let nn_paksha = mhahCalculateFunc.getPaksha(nn_tithi);\n    let ayanamsaAtRise = mhahPanchangImpl.calcayan(sunRise);\n    let nn_naksh = this.getCalendarNakshatra(\n      mhahCalculateFunc,\n      mhahPanchangImpl,\n      ayanamsaAtRise,\n      sunRise\n    );\n    let nn_yoga = this.getCalendarYoga(\n      mhahCalculateFunc,\n      mhahPanchangImpl,\n      sunRise,\n      ayanamsaAtRise\n    );\n    let nn_karana = mhahCalculateFunc.getKarana(\n      mhahPanchangImpl.moon(sunRise),\n      mhahPanchangImpl.sun(sunRise)\n    )[0];\n    let nn_raasi = this.getCalendarRaasi(\n      mhahPanchangImpl,\n      mhahPanchangImpl.sun(sunRise),\n      ayanamsaAtRise\n    );\n\n    let masa: { n_maasa: number; is_leap_month: boolean } = this.getMasa(\n      mhahPanchangImpl,\n      nn_tithi,\n      sunRise\n    );\n\n    let ritu = this.getRitu(masa.n_maasa);\n\n    Raasi.ino = nn_raasi - 1;\n    Raasi.name_en_UK = mhahConstant.Raasi.name_en_UK[nn_raasi - 1];\n    Raasi.name = mhahConstant.Raasi.name[nn_raasi - 1];\n    Tithi.name = mhahConstant.Tithi.name[nn_tithi - 1];\n    Tithi.name_en_NP = mhahConstant.Tithi.name_en_NP[nn_tithi - 1];\n    Tithi.ino = nn_tithi - 1;\n    Paksha.ino = nn_paksha;\n    Paksha.name = mhahConstant.Paksha.name[nn_paksha];\n    Paksha.name_en_NP = mhahConstant.Paksha.name_en_NP[nn_paksha];\n    Paksha.name_en_UK = mhahConstant.Paksha.name_en_UK[nn_paksha];\n    Nakshatra.name = mhahConstant.Nakshatra.name[nn_naksh];\n    Nakshatra.name_en_NP = mhahConstant.Nakshatra.name_en_NP[nn_naksh];\n    Nakshatra.ino = nn_naksh;\n    Yoga.name = mhahConstant.Yoga.name[nn_yoga];\n    Yoga.name_en_NP = mhahConstant.Yoga.name_en_NP[nn_yoga];\n    Yoga.ino = nn_yoga;\n    Karna.name = mhahConstant.Karna.name[nn_karana];\n    Karna.name_en_NP = mhahConstant.Karna.name_en_NP[nn_karana];\n    Karna.ino = nn_karana;\n    Masa.ino = nn_raasi - 1;\n    Masa.name = mhahConstant.Masa.name[nn_raasi - 1];\n    Masa.name_en_NP = mhahConstant.Masa.name_en_NP[nn_raasi - 1];\n    MoonMasa.ino = masa.n_maasa - 1;\n    MoonMasa.isLeapMonth = masa.is_leap_month;\n    MoonMasa.name = mhahConstant.Masa.name[masa.n_maasa - 1];\n    MoonMasa.name_en_NP = mhahConstant.Masa.name_en_NP[masa.n_maasa - 1];\n    Ritu.ino = ritu;\n    Ritu.name = mhahConstant.Ritu.name[ritu];\n    Ritu.name_en_UK = mhahConstant.Ritu.name_en_UK[ritu];\n    return {\n      Tithi,\n      Paksha,\n      Nakshatra,\n      Yoga,\n      Karna,\n      Masa,\n      MoonMasa,\n      Raasi,\n      Ritu,\n    };\n  }\n\n  // get tithi in (1-15) Sukla and (16-30) Krushna\n  getCalendarTithi(sunRise: number, mhahPanchangImpl: MhahPanchangImpl) {\n    let moonPhaseToday = mhahPanchangImpl.lunarPhase(sunRise);\n    let today = Math.ceil(moonPhaseToday / 12);\n    let tithi = today;\n    //check for skipped tithi\n    let moonPhaseTommorow = mhahPanchangImpl.lunarPhase(sunRise + 1);\n    let tommorow = Math.ceil(moonPhaseTommorow / 12);\n    let isSkipped = (tommorow - today) % 30 > 1;\n    if (isSkipped) {\n      tithi = today + 1;\n    }\n    return tithi;\n  }\n\n  getCalendarNakshatra(\n    mhahCalculateFunc: MhahCalculateFunc,\n    mhahPanchangImpl: MhahPanchangImpl,\n    ayanamsa: number,\n    sunRise: number\n  ) {\n    let nak_today = mhahCalculateFunc.getNakshatra(\n      mhahPanchangImpl,\n      mhahPanchangImpl.moon(sunRise),\n      ayanamsa\n    );\n    let nak_tmrw = mhahCalculateFunc.getNakshatra(\n      mhahPanchangImpl,\n      mhahPanchangImpl.moon(sunRise + 1),\n      mhahPanchangImpl.calcayan(sunRise + 1)\n    );\n    let n_nak = nak_today;\n    let isSkipped = (nak_tmrw - nak_today) % 27 > 1;\n    if (isSkipped) {\n      n_nak = nak_today + 1;\n    }\n    return n_nak;\n  }\n\n  getCalendarYoga(\n    mhahCalculateFunc: MhahCalculateFunc,\n    mhahPanchangImpl: MhahPanchangImpl,\n    sunRise: number,\n    ayanamsa: number\n  ) {\n    let todayYoga = mhahCalculateFunc.getYoga(\n      mhahCalculateFunc.getZYoga(mhahPanchangImpl, ayanamsa, sunRise)\n    );\n    let tmorowYoga = mhahCalculateFunc.getYoga(\n      mhahCalculateFunc.getZYoga(\n        mhahPanchangImpl,\n        mhahPanchangImpl.calcayan(sunRise + 1),\n        sunRise + 1\n      )\n    );\n    let n_yoga = todayYoga;\n    let isSkipped = (tmorowYoga - todayYoga) % 27 > 1;\n    if (isSkipped) {\n      n_yoga = todayYoga + 1;\n    }\n    return n_yoga;\n  }\n\n  getCalendarRaasi(\n    mhahPanchangImpl: MhahPanchangImpl,\n    Lsun: number,\n    ayanamsa: number\n  ) {\n    let solar_nirayana = mhahPanchangImpl.fix360(Lsun + ayanamsa);\n    return Math.ceil(solar_nirayana / 30);\n  }\n\n  getMasa(mhahPanchangImpl: MhahPanchangImpl, tithi: number, sunrise: number) {\n    let lastNewMoon = sunrise - (tithi - 1);\n    let nextNewMoon = sunrise + (29 - (tithi - 1));\n    let currentSolarMonth = this.getCalendarRaasi(\n      mhahPanchangImpl,\n      mhahPanchangImpl.sun(lastNewMoon),\n      mhahPanchangImpl.calcayan(lastNewMoon)\n    );\n    let nextSolarMonth = this.getCalendarRaasi(\n      mhahPanchangImpl,\n      mhahPanchangImpl.sun(nextNewMoon),\n      mhahPanchangImpl.calcayan(nextNewMoon)\n    );\n\n    let is_leap_month = currentSolarMonth === nextSolarMonth;\n    let n_maasa = is_leap_month ? currentSolarMonth : currentSolarMonth + 1;\n    if (n_maasa > 12) {\n      n_maasa = n_maasa % 12;\n    }\n\n    return { n_maasa, is_leap_month };\n  }\n\n  getRitu(masa_num: number): number {\n    return Math.floor((masa_num - 1) / 2);\n  }\n}\n","import { MhahCalculateFunc } from './mhahCalculateFunc';\nimport { MhahConstant } from './mhahConstant';\nimport { MhahSunMoonTimer } from './mhahSunMoonTimer';\nimport { MhahCalendar } from './mhahCalendar';\n\nexport class MhahPanchang {\n  private mhahConstant = new MhahConstant();\n  private mhahCalculateFunc = new MhahCalculateFunc();\n  private mhahSunMoonTimer = new MhahSunMoonTimer();\n  private mhahCalendar = new MhahCalendar();\n  calculate(dt: Date) {\n    return this.mhahCalculateFunc.calculate(dt, this.mhahConstant);\n  }\n\n  calendar(dt: Date, lat: number, lng: number, height?: number) {\n    return this.mhahCalendar.calendar(this.mhahConstant, dt, lat, lng, height);\n  }\n\n  sunTimer(date: Date, lat: number, lng: number, height?: number) {\n    height = height || 0;\n    return this.mhahSunMoonTimer.sunTimer(date, lat, lng, height);\n  }\n\n  getMhahConstant(catgory: string, name: string): Array<string> {\n    return this.mhahConstant[catgory][name];\n  }\n\n  setMhahConstant(catgory: string, name: string, mhahlist: Array<string>) {\n    this.mhahConstant[catgory][name] = mhahlist;\n  }\n}\n"],"names":["corr","mlcor","mscor","fcor","dcor","lcor","this","corr2","l","ml","ms","f","d","MhahMoonOutragConst","MhahPanchangImpl","mhahConstant","Math","PI","_proto","prototype","daysInMonth","m","y","g_days","moon","jd","tdays","t","t2","t3","fix360","r2rad","d2r","tb","t2c","a1","sin","a2","c2","cos","a3","a4","c4","a5","a6","dlm","dls","dgc","lk","lk1","i1corr","i2corr","i","sinarg","mhahMoonOutragConst","corrMoon","corrMoon2","dlid","nutation","LmoonYoga","vl","skor","sun","truanom","ls","g","ex","u","kepler","b","sqrt","abs","atan","tan","r2d","u1","u2","u3","u4","u6","u5","dl","dr","il","ab","LsunYoga","tithi","n1","tzone","len","flag","s_t","jdt","knv","floor","itit","aspect","novolun","Lsun0","Lmoon0","asp1","start","calData","dt","end","nakshatra","n_naksh","inak","ayanamsa","yoga","zyoga","z","nn_yoga","Array","iyog","jdnv","djd","err","u0","delta","om","d2","l2","ls2","nut","calcayan","mdy2julian","im","j","dTime","efdt","dgod","kyear","kmon","kday","i1","alf","z1","z2","c","e","days","hh1","khr","kmin","ksek","Date","lon2dmsz","x","ss0","round","lon2dms","v","weekDay","jd0","jdn","dn1","lunarPhase","Lmoon","Lsun","MhahCalculateFunc","calculate","n_wday","n_tithi","n_karana","n_yoga","mhahPanchangImpl","Day","Tithi","Paksha","Nakshatra","Karna","Yoga","Ayanamsa","Raasi","Julian","day","getDate","mon","getMonth","year","getFullYear","hr","getHours","getMinutes","getTimezoneOffset","inpmin","jdlt","ino","name","name_en_UK","jdut","getZYoga","getYoga","s_yoga","getNakshatra","s_naksh","getTithi","s_tithi","n_paksha","getPaksha","KaranaArray","getKarana","s_karana","getRaasi","name_en_NP","date","nk","MhahConstant","MhahSunMoonTimer","rad","sunTimer","lat","lng","height","time","Jset","calS","calculatSunTimer","result","solarNoon","fromJulian","Jnoon","nadir","times","length","getSetJ","dh","lw","phi","dec","n","M","L","observerAngle","toDays","julianCycle","ds","approxTransit","solarMeanAnomaly","eclipticLongitude","declination","solarTransitJ","getSunRiseJd","J0","toJulian","valueOf","dayMs","J1970","J2000","Ht","hourAngle","h","acos","asin","w","a","MhahCalendar","calendar","Masa","MoonMasa","Ritu","mhahCalculateFunc","sunRise","nn_tithi","getCalendarTithi","nn_paksha","ayanamsaAtRise","nn_naksh","getCalendarNakshatra","getCalendarYoga","nn_karana","nn_raasi","getCalendarRaasi","masa","getMasa","ritu","getRitu","n_maasa","isLeapMonth","is_leap_month","moonPhaseToday","today","ceil","moonPhaseTommorow","nak_today","n_nak","todayYoga","solar_nirayana","sunrise","lastNewMoon","nextNewMoon","currentSolarMonth","masa_num","MhahPanchang","mhahCalendar","mhahSunMoonTimer","getMhahConstant","catgory","setMhahConstant","mhahlist"],"mappings":"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C,GACR,OAAOA,EAAU,GAAK,EAAI,GAC3BH,KC9LUgD,EAAb,WACE1M,UAAO,CACLuL,KAAM,CAAE,QAAS,UAAW,QAAS,OAAQ,SAAU,QACvDC,WAAY,CACV,SACA,SACA,UACA,SACA,aACA,WAGJxL,UAAO,CACLuL,KAAK,CAAE,QAAS,MAAO,OAAQ,OAAQ,MAAO,OAAQ,UAAW,QAAS,MAAO,MAAO,UAAW,OACnGgB,WAAY,CACV,WACA,UACA,SACA,UACA,WACA,SACA,WACA,YACA,QACA,QACA,WACA,YAGJvM,WAGI,CACFuL,KAAM,CAAE,MAAO,MAAO,QAAS,QAAS,OAAQ,QAAS,OAAQ,UAAW,MAAO,MAAO,QAAS,OACnGC,WAAY,CACV,QACA,SACA,SACA,SACA,MACA,QACA,QACA,UACA,cACA,YACA,WACA,WAGJxL,SAAM,CACJuL,KAAM,CAAE,SAAU,SAAU,WAAY,SAAU,UAAW,WAAY,UACzEC,WAAY,CACV,SACA,SACA,UACA,YACA,WACA,SACA,aAGJxL,eAAY,CACVuL,KAAM,CACJ,UACA,OACA,WACA,SACA,WACA,UACA,WACA,QACA,UACA,MACA,iBACA,iBACA,OACA,SACA,SACA,SACA,UACA,WACA,MACA,aACA,aACA,QACA,UACA,SACA,iBACA,iBACA,SAGFgB,WAAY,CACV,UACA,QACA,WACA,SACA,eACA,QACA,YACA,SACA,WACA,QACA,iBACA,kBACA,QACA,SACA,QACA,WACA,WACA,WACA,OACA,gBACA,iBACA,UACA,YACA,cACA,mBACA,oBACA,WAGJvM,YAAS,CACPuM,WAAY,CAAC,SAAU,WACvBf,WAAY,CAAC,cAAe,eAC5BD,KAAM,CAAC,QAAS,UAGlBvL,WAAQ,CACNuL,KAAM,CACJ,WACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,OACA,OACA,SACA,UACA,WACA,WACA,WACA,WACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,OACA,OACA,SACA,UACA,WACA,WACA,aAEFgB,WAAY,CACV,UACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,SACA,SACA,UACA,UACA,YACA,aACA,UACA,UACA,UACA,UACA,UACA,WACA,SACA,WACA,UACA,SACA,SACA,UACA,UACA,YACA,aACA,aAGJvM,WAAQ,CACNuM,WAAY,CACV,OACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,cACA,SACA,eAEFhB,KAAK,CAAE,KAAM,OAAQ,OAAQ,QAAS,MAAO,OAAQ,SAAU,QAAS,UAAW,MAAO,eAE5FvL,UAAO,CACLuM,WAAY,CACV,aACA,SACA,WACA,YACA,UACA,WACA,WACA,UACA,QACA,QACA,SACA,SACA,WACA,WACA,QACA,SACA,YACA,UACA,UACA,OACA,SACA,SACA,QACA,QACA,SACA,QACA,cAEFhB,KAAM,CAAE,WAAY,OAAQ,WAAY,UAAW,OAAQ,UAAW,UAAW,OAAQ,MAAO,OAAQ,SAAU,QAAS,UAAW,QAAS,OAAQ,QAAS,WAAY,SAAU,OAAQ,MAAO,QAAS,QAAS,MAAO,QAAS,SAAU,SAAU,YChPlPoB,aAAb,SAAAA,IACE3M,SAAMU,KAAKC,GAAK,IAIhBX,WAAQ,CACN,EAAE,KAAO,UAAW,UACpB,EAAE,GAAK,aAAc,eACrB,EAAE,EAAG,OAAQ,QACb,EAAE,GAAI,eAAgB,gBACtB,EAAE,GAAI,WAAY,UAkEpBA,WAAQ,MACRA,WAAQ,QACRA,WAAQ,QACRA,QAAK,KAwCLA,OAAe,QAAXA,KAAK4M,IAaV,IAAAhM,EAAA+L,EAAA9L,UADE,OACFD,EAvHCiM,SAAA,SAASL,EAAYM,EAAaC,EAAaC,GAC7C,IAKIlK,EAAGmK,EAAUC,EALbC,EAAOnN,KAAKoN,iBAAiBZ,EAAMM,EAAKC,EAAKC,GAC7CK,EAAc,CAChBC,UAAWtN,KAAKuN,WAAWJ,EAAKK,OAChCC,MAAOzN,KAAKuN,WAAWJ,EAAKK,MAAQ,KAGtC,IAAK1K,EAAI,EAAGA,EAAI9C,KAAK0N,MAAMC,OAAQ7K,GAAK,EAItCoK,EAAOlN,KAAK4N,UAHZX,EAAOjN,KAAK0N,MAAM5K,IACP,GAAKqK,EAAKU,IAAM7N,KAAK4M,IAI9BO,EAAKW,GACLX,EAAKY,IACLZ,EAAKa,IACLb,EAAKc,EACLd,EAAKe,EACLf,EAAKgB,GAIPd,EAAOJ,EAAK,IAAMjN,KAAKuN,WAFfJ,EAAKK,OAASN,EAAOC,EAAKK,QAGlCH,EAAOJ,EAAK,IAAMjN,KAAKuN,WAAWL,GAEpC,OAAOG,GACRzM,EAEDwM,iBAAA,SAAiBZ,EAAYM,EAAaC,EAAaC,GAGrD,IAAIc,EAAK9N,KAAK4M,KAAOG,EACnBgB,EAAM/N,KAAK4M,IAAME,EACjBe,EAAK7N,KAAKoO,cAJZpB,EAASA,GAAU,GAKjB1M,EAAIN,KAAKqO,OAAO7B,GAChByB,EAAIjO,KAAKsO,YAAYhO,EAAGwN,GACxBS,EAAKvO,KAAKwO,cAAc,EAAGV,EAAIG,GAC/BC,EAAIlO,KAAKyO,iBAAiBF,GAC1BJ,EAAInO,KAAK0O,kBAAkBR,GAC3BF,EAAMhO,KAAK2O,YAAYR,EAAG,GAG5B,MAAO,CAAEX,MAFCxN,KAAK4O,cAAcL,EAAIL,EAAGC,GAEpBN,GAAAA,EAAIC,GAAAA,EAAIC,IAAAA,EAAKC,IAAAA,EAAKC,EAAAA,EAAGC,EAAAA,EAAGC,EAAAA,IACzCvN,EAEDiO,aAAA,SAAarC,EAAYM,EAAaC,EAAaC,GACjD,IACcE,EADVC,EAAOnN,KAAKoN,iBAAiBZ,EAAMM,EAAKC,EAAKC,GAcjD,OAVAE,EAAOlN,KAAK4N,SAFL5N,KAAK0N,MAAM,GACP,GAAKP,EAAKU,IAAM7N,KAAK4M,IAG9BO,EAAKW,GACLX,EAAKY,IACLZ,EAAKa,IACLb,EAAKc,EACLd,EAAKe,EACLf,EAAKgB,GAEChB,EAAKK,OAASN,EAAOC,EAAKK,QAEnC5M,EAMDwN,cAAA,SAAcpB,GACZ,OAAS,MAAQtM,KAAKsD,KAAKgJ,GAAW,IACvCpM,EACD0N,YAAA,SAAYhO,EAAGwN,GACb,OAAOpN,KAAKsI,MAAM1I,EAAIN,KAAK8O,GAAKhB,GAAM,EAAIpN,KAAKC,MAChDC,EACDmO,SAAA,SAASvC,GACP,OAAOA,EAAKwC,UAAYhP,KAAKiP,MAAQ,GAAMjP,KAAKkP,OACjDtO,EACD2M,WAAA,SAAW7F,GACT,OAAO,IAAIkB,MAAMlB,EAAI,GAAM1H,KAAKkP,OAASlP,KAAKiP,QAC/CrO,EACDyN,OAAA,SAAO7B,GACL,OAAOxM,KAAK+O,SAASvC,GAAQxM,KAAKmP,OACnCvO,EACD4N,cAAA,SAAcY,EAAItB,EAAIG,GACpB,OAAOjO,KAAK8O,IAAMM,EAAKtB,IAAO,EAAIpN,KAAKC,IAAMsN,GAC9CrN,EACDyO,UAAA,SAAUC,EAAGvB,EAAKzN,GAChB,OAAOI,KAAK6O,MACT7O,KAAKoB,IAAIwN,GAAK5O,KAAKoB,IAAIiM,GAAOrN,KAAKoB,IAAIxB,KACrCI,KAAKuB,IAAI8L,GAAOrN,KAAKuB,IAAI3B,MAE/BM,EACDgO,cAAA,SAAcL,EAAIL,EAAGC,GACnB,OAAOnO,KAAKmP,MAAQZ,EAAK,MAAS7N,KAAKoB,IAAIoM,GAAK,MAASxN,KAAKoB,IAAI,EAAIqM,IACvEvN,EACD6N,iBAAA,SAAiBnO,GACf,OAAON,KAAK4M,KAAO,SAAW,UAAatM,IAC5CM,EACD8N,kBAAA,SAAkBR,GAOhB,OAAOA,EALHlO,KAAK4M,KACJ,OAASlM,KAAKoB,IAAIoM,GACjB,IAAOxN,KAAKoB,IAAI,EAAIoM,GACpB,KAASxN,KAAKoB,IAAI,EAAIoM,IACX,SAAXlO,KAAK4M,IACQlM,KAAKC,IACzBC,EAED+N,YAAA,SAAYzO,EAAG6D,GACb,OAAOrD,KAAK8O,KACV9O,KAAKoB,IAAIiC,GAAKrD,KAAKuB,IAAIjC,KAAKsI,GAC1B5H,KAAKuB,IAAI8B,GAAKrD,KAAKoB,IAAI9B,KAAKsI,GAAK5H,KAAKoB,IAAI5B,KAE/CU,EAEDgN,QAAA,SAAQ0B,EAAGxB,EAAIC,EAAKC,EAAKC,EAAGC,EAAGC,GAC7B,IAAIsB,EAAIzP,KAAKqP,UAAUC,EAAGvB,EAAKC,GAC7B0B,EAAI1P,KAAKwO,cAAciB,EAAG3B,EAAIG,GAChC,OAAOjO,KAAK4O,cAAcc,EAAGxB,EAAGC,IACjCxB,KC/HUgD,aAAY,SAAAA,KAAA,IAAA/O,EAAA+O,EAAA9O,UAiMtB,OAjMsBD,EACvBgP,SAAA,SACEnP,EACAwF,EACA6G,EACAC,EACAC,GAEA,IAAI9C,EAAa,GACbE,EAAiB,GACjBE,EAAY,GACZD,EAAa,GACbwF,EAAY,GACZC,EAAgB,GAChBtF,EAAa,GACbuF,EAAY,GACZ5F,EAAc,GACdH,EAAmB,IAAIxJ,EAAiBC,GACxCuP,EAAoB,IAAItG,EAExBuG,GADmB,IAAItD,GACIkC,aAAa5I,EAAI6G,EAAKC,EAAKC,GACtDkD,EAAWlQ,KAAKmQ,iBAAiBF,EAASjG,GAC1CoG,EAAYJ,EAAkB9D,UAAUgE,GACxCG,EAAiBrG,EAAiBzC,SAAS0I,GAC3CK,EAAWtQ,KAAKuQ,qBAClBP,EACAhG,EACAqG,EACAJ,GAEEvJ,EAAU1G,KAAKwQ,gBACjBR,EACAhG,EACAiG,EACAI,GAEEI,EAAYT,EAAkB5D,UAChCpC,EAAiB9I,KAAK+O,GACtBjG,EAAiBxG,IAAIyM,IACrB,GACES,EAAW1Q,KAAK2Q,iBAClB3G,EACAA,EAAiBxG,IAAIyM,GACrBI,GAGEO,EAAoD5Q,KAAK6Q,QAC3D7G,EACAkG,EACAD,GAGEa,EAAO9Q,KAAK+Q,QAAQH,EAAKI,SA+B7B,OA7BAxG,EAAMc,IAAMoF,EAAW,EACvBlG,EAAMgB,WAAa/K,EAAa+J,MAAMgB,WAAWkF,EAAW,GAC5DlG,EAAMe,KAAO9K,EAAa+J,MAAMe,KAAKmF,EAAW,GAChDxG,EAAMqB,KAAO9K,EAAayJ,MAAMqB,KAAK2E,EAAW,GAChDhG,EAAMqC,WAAa9L,EAAayJ,MAAMqC,WAAW2D,EAAW,GAC5DhG,EAAMoB,IAAM4E,EAAW,EACvB/F,EAAOmB,IAAM8E,EACbjG,EAAOoB,KAAO9K,EAAa0J,OAAOoB,KAAK6E,GACvCjG,EAAOoC,WAAa9L,EAAa0J,OAAOoC,WAAW6D,GACnDjG,EAAOqB,WAAa/K,EAAa0J,OAAOqB,WAAW4E,GACnDhG,EAAUmB,KAAO9K,EAAa2J,UAAUmB,KAAK+E,GAC7ClG,EAAUmC,WAAa9L,EAAa2J,UAAUmC,WAAW+D,GACzDlG,EAAUkB,IAAMgF,EAChBhG,EAAKiB,KAAO9K,EAAa6J,KAAKiB,KAAK7E,GACnC4D,EAAKiC,WAAa9L,EAAa6J,KAAKiC,WAAW7F,GAC/C4D,EAAKgB,IAAM5E,EACX2D,EAAMkB,KAAO9K,EAAa4J,MAAMkB,KAAKkF,GACrCpG,EAAMkC,WAAa9L,EAAa4J,MAAMkC,WAAWkE,GACjDpG,EAAMiB,IAAMmF,EACZZ,EAAKvE,IAAMoF,EAAW,EACtBb,EAAKtE,KAAO9K,EAAaoP,KAAKtE,KAAKmF,EAAW,GAC9Cb,EAAKtD,WAAa9L,EAAaoP,KAAKtD,WAAWmE,EAAW,GAC1DZ,EAASxE,IAAMsF,EAAKI,QAAU,EAC9BlB,EAASmB,YAAcL,EAAKM,cAC5BpB,EAASvE,KAAO9K,EAAaoP,KAAKtE,KAAKqF,EAAKI,QAAU,GACtDlB,EAASvD,WAAa9L,EAAaoP,KAAKtD,WAAWqE,EAAKI,QAAU,GAClEjB,EAAKzE,IAAMwF,EACXf,EAAKxE,KAAO9K,EAAasP,KAAKxE,KAAKuF,GACnCf,EAAKvE,WAAa/K,EAAasP,KAAKvE,WAAWsF,GACxC,CACL5G,MAAAA,EACAC,OAAAA,EACAC,UAAAA,EACAE,KAAAA,EACAD,MAAAA,EACAwF,KAAAA,EACAC,SAAAA,EACAtF,MAAAA,EACAuF,KAAAA,IAIJnP,EACAuP,iBAAA,SAAiBF,EAAiBjG,GAChC,IAAImH,EAAiBnH,EAAiBT,WAAW0G,GAC7CmB,EAAQ1Q,KAAK2Q,KAAKF,EAAiB,IACnCnM,EAAQoM,EAERE,EAAoBtH,EAAiBT,WAAW0G,EAAU,GAM9D,OALevP,KAAK2Q,KAAKC,EAAoB,IACjBF,GAAS,GAAK,IAExCpM,EAAQoM,EAAQ,GAEXpM,GACRpE,EAED2P,qBAAA,SACEP,EACAhG,EACA1D,EACA2J,GAEA,IAAIsB,EAAYvB,EAAkBnE,aAChC7B,EACAA,EAAiB9I,KAAK+O,GACtB3J,GAOEkL,EAAQD,EAKZ,OAVevB,EAAkBnE,aAC/B7B,EACAA,EAAiB9I,KAAK+O,EAAU,GAChCjG,EAAiBzC,SAAS0I,EAAU,IAGVsB,GAAa,GAAK,IAE5CC,EAAQD,EAAY,GAEfC,GACR5Q,EAED4P,gBAAA,SACER,EACAhG,EACAiG,EACA3J,GAEA,IAAImL,EAAYzB,EAAkBrE,QAChCqE,EAAkBtE,SAAS1B,EAAkB1D,EAAU2J,IASrDlG,EAAS0H,EAKb,OAZiBzB,EAAkBrE,QACjCqE,EAAkBtE,SAChB1B,EACAA,EAAiBzC,SAAS0I,EAAU,GACpCA,EAAU,IAIgBwB,GAAa,GAAK,IAE9C1H,EAAS0H,EAAY,GAEhB1H,GACRnJ,EAED+P,iBAAA,SACE3G,EACAP,EACAnD,GAEA,IAAIoL,EAAiB1H,EAAiBxI,OAAOiI,EAAOnD,GACpD,OAAO5F,KAAK2Q,KAAKK,EAAiB,KACnC9Q,EAEDiQ,QAAA,SAAQ7G,EAAoChF,EAAe2M,GACzD,IAAIC,EAAcD,GAAW3M,EAAQ,GACjC6M,EAAcF,GAAW,IAAM3M,EAAQ,IACvC8M,EAAoB9R,KAAK2Q,iBAC3B3G,EACAA,EAAiBxG,IAAIoO,GACrB5H,EAAiBzC,SAASqK,IAQxBV,EAAgBY,IANC9R,KAAK2Q,iBACxB3G,EACAA,EAAiBxG,IAAIqO,GACrB7H,EAAiBzC,SAASsK,IAIxBb,EAAUE,EAAgBY,EAAoBA,EAAoB,EAKtE,OAJId,EAAU,KACZA,GAAoB,IAGf,CAAEA,QAAAA,EAASE,cAAAA,IACnBtQ,EAEDmQ,QAAA,SAAQgB,GACN,OAAOrR,KAAK8E,OAAOuM,EAAW,GAAK,IACpCpC,qCChMH,SAAAqC,IACUhS,kBAAe,IAAI0M,EACnB1M,uBAAoB,IAAI0J,EACxB1J,sBAAmB,IAAI2M,EACvB3M,kBAAe,IAAI2P,EAqB5B,IAAA/O,EAAAoR,EAAAnR,UADE,OACFD,EApBC+I,UAAA,SAAU1D,GACR,OAAOjG,KAAKgQ,kBAAkBrG,UAAU1D,EAAIjG,KAAKS,eAClDG,EAEDgP,SAAA,SAAS3J,EAAU6G,EAAaC,EAAaC,GAC3C,OAAOhN,KAAKiS,aAAarC,SAAS5P,KAAKS,aAAcwF,EAAI6G,EAAKC,EAAKC,IACpEpM,EAEDiM,SAAA,SAASL,EAAYM,EAAaC,EAAaC,GAE7C,OAAOhN,KAAKkS,iBAAiBrF,SAASL,EAAMM,EAAKC,EADjDC,EAASA,GAAU,IAEpBpM,EAEDuR,gBAAA,SAAgBC,EAAiB7G,GAC/B,OAAOvL,KAAKS,aAAa2R,GAAS7G,IACnC3K,EAEDyR,gBAAA,SAAgBD,EAAiB7G,EAAc+G,GAC7CtS,KAAKS,aAAa2R,GAAS7G,GAAQ+G,GACpCN"}